version: '3'

networks:
    app-tier:
        driver: bridge

services:
    redis:
        image: docker.io/bitnami/redis:7.0
        environment:
            # ALLOW_EMPTY_PASSWORD is recommended only for development
            - ALLOW_EMPTY_PASSWORD=yes
            # - REDIS_PASSWORD=mypassword123
            - REDIS_DISABLE_COMMANDS=FLUSHDB,FLUSHALL
        # command: redis-server --requirepass ${REDIS_PASSWORD}
        volumes:
            - 'redis_data:/bitnami/redis/data'
        #     - redis:/var/lib/redis/data
        #     - ./redis.conf:usr/local/etc/redis/redis.conf
        ports:
            - "6379:6379"
        env_file:
            - ../../.env
        container_name: redis_08152022
    app:
        image: dataflightit/dev/ccv1-app:$GIT_COMMIT
        environment:
            - REDIS_HOST=redis
        ports:
            - "8080:80"
        env_file:
            - ../../.env
        # depends_on:
        #   - redis
        networks:
            - app-tier
    web:
        image: dataflightit/dev/ccv1-app:$GIT_COMMIT
        depends_on:
            - app
        network_mode: 'service:app'
    
    
volumes:
    redis_data:
        driver: local
    
    # Deploy the broker.
    # rabbitmq_server:
    #     image: rabbitmq:3-management-alpine
    #     ports:
    #     # Expose the port for the worker to add/get tasks
    #         - "5672:5672"
    #     # OPTIONAL: Expose the GUI port
    #         - 15672:15672
    # Deploy the worker
    # worker:
    #     # Build using the worker Dockerfile
    #     build:
    #     context: .
    #     dockerfile: worker.Dockerfile
    #     # Need to access the database
    #     # OPTIONAL: If you worker needs to access your db that is deployed
    #     # locally, then make the network mode as host.
    #     network_mode: host
    #     # Pass the rabbitmq_uri as env varible in order to
    #     # connect to our service
    #     environment:
    #     # NOTE: Below we are using 127.0.0.1 because this container
    #     # will run on the host network, thus it will have access to the
    #     # host network.
    #     # If it would not have run locally, we would have had to
    #     # connect using the service name like following:
    #     # amqp:rabbitmq_server:5672
    #     rabbitmq_uri: amqp://127.0.0.1:5672
    #     # Make it wait for rabbitmq deployment
    #     depends_on: 
    #         - rabbitmq_server

    # flower:
    #     image: mher/flower:0.9.7
    #     ports:
    #         - 5557:5555
    #     depends_on:
    #         - rabbitmq_server

